@Cameron Lawenrence
@CPSC 2310 001
@Lab7 - Parameter Passing
@June 6 2023 
1. Fill in the table below for every call to "fact". Each row
represents the values of r1 and lr when line 3 executes and they are pushed
onto the stack. The first time it executes, r1 is unset and the lr points to line 39.

r1	lr
---	-------
-	39
10	12
9	12
8	12
7	12
6	12
5	12
4	12
3	12
2	12



2. In "fac.s", the multiply instruction on line 12 comes after a "bl" which is a branch that will always be taken. How does line 12 get executed if the "bl" is always taken?

HINT: Review what "bl" does at http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.dui0489c/Cihfddaf.html (scroll down to "Operations")

The stack is pretty much alreadly full due to the prior calls, the lr values are being taken to the pc causing line 12 to execute because it was pulled from the stack and put onto the pc.


3. Why doesn't the code in "fac2.s" save any registers on the stack? What is it doing instead?

Because r0 = 10 and r1 = 1, the program moves and multiplies r0 * r1. Also r0 is going down because of the while loop until its 0. When it finally reaches 0 it branches and prints.


4. Identify which program calculates the factorial recursively and which is iterative.

Recursively: fac.s
Iterative: fac2.s


NOTE: The comments for "main:" in "fac.s" are already done for you and you do not have to comment "main:" in "fac2.s".

test
